#include <bits/stdc++.h>
using namespace std; 
# define ll long long int
# define  vi vector<int>
# define  vp  vector<pair<int,int>>
# define  f(a,b) for(int i=a;i<b;i++)
# define  pii pair<int,int>
# define mod 1e9+7
int GCD(int A, int B) {
    if(B==0)
        return A;/*Euclid’s Algorithm is GCD(A, B) = GCD(B, A % B). The algorithm will recurrentse until A % B = 0.
                  The time complexity of Euclid’s Algorithm is O(log(max(A, B))).*/
    else 
        return GCD(B, A % B);
}



int main()
{
 int n;
 cin>>n;
 /*you need to find out all prime numbers less than or equal to n.
 */
 vector<int>is_prime(n+1,1);
 //initially all were considered as prime.
 is_prime[0]=0;
 is_prime[1]=0;
 for(int i=2;i<=sqrt(n);i++)
 {
     if(is_prime[i]==1)//it means no number before which was the factor of i.hence it is a prime and will be used to mark all its multiples as non prime.
     {
         for(int j=i*i;j<=n;j+=i)
         is_prime[j]=0;
     }
 }
 stack<int>s;
 for(int i=0;i<=n;i++)
 {
     if(is_prime[i]==1)
     s.push(i);
 }
 while(!s.empty())
 {
     cout<<s.top()<<" ";
     s.pop();
 }
}
